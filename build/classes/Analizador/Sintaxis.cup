package Analizador;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Linea, Comillas, If, Else, Do, While, For, Int, Switch,
    Cadena, T_int, T_double, T_long, T_char, T_float, T_byte,
    Igual, Suma, Resta, Multiplicacion, Division, 
    Op_igual, Op_diferente,Op_menor, Op_mayor, Op_or, Op_and, Op_menorE, Op_mayorE,
    Op_not, Op_orB, Op_andB, Op_boolFalse, Op_boolTrue,
    Op_atribucion, Op_incremento, Op_decremento,
    Op_asigResta, Op_asigDiv,  Op_asigMult, Op_asigSuma, Op_asigResto,
    Op_desDer, Op_desIzq, 
    Parent_a, Parent_c, Llave_a, Llave_c, Corchete_a, Corchete_c,
    Void, Printf, Main, P_coma, Punto, Identificador, Coma,
    Numero, ERROR, Default;

non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, IF_ELSE,
    WHILE, DO_WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR, PRINTF, SENTENCIA_PRINTF;

start with INICIO;

INICIO ::= 
    T_int Main Parent_a Parent_c Llave_a SENTENCIA Llave_c |
    Void Main Parent_a Parent_c Llave_a SENTENCIA Llave_c |
    Main Parent_a Parent_c Llave_a SENTENCIA Llave_c
;

SENTENCIA ::= 
    SENTENCIA DECLARACION |
    DECLARACION |
    SENTENCIA IF | 
    IF |
    SENTENCIA IF_ELSE |
    IF_ELSE |
    SENTENCIA WHILE |
    WHILE |
    SENTENCIA DO_WHILE
    DO_WHILE |
    SENTENCIA FOR |
    FOR |
    SENTENCIA PRINTF |
    PRINTF 
;

DECLARACION ::= 
    T_int Identificador P_coma | 
    T_int Identificador Op_atribucion Numero P_coma |
    T_int Identificador Op_atribucion Numero Identificador Op_atribucion Numero P_coma |
    T_int Identificador Op_atribucion Numero Punto Numero P_coma |
    T_int Identificador Igual Numero P_coma |
    T_int Identificador Igual Numero Punto Numero P_coma |
    T_int Identificador Op_incremento P_coma | 
    T_int Op_incremento Identificador P_coma | 

    Cadena Identificador Op_atribucion Comillas Comillas P_coma |
    Cadena Identificador Igual Comillas Comillas P_coma |
    Cadena Identificador Op_atribucion Comillas Identificador Comillas P_coma |
    Cadena Identificador Igual Comillas Identificador Comillas P_coma |

    T_double Identificador P_coma | 
    T_double Identificador Op_atribucion Numero Punto Numero P_coma |
    T_double Identificador Igual Numero Punto Numero P_coma |
    T_double Identificador Op_incremento P_coma | 
    T_double Op_incremento Identificador P_coma | 

    T_long Identificador P_coma | 
    T_long Identificador Op_atribucion Numero Punto Numero P_coma |
    T_long Identificador Igual Numero Punto Numero P_coma |
    T_long Identificador Op_incremento P_coma | 
    T_long Op_incremento Identificador P_coma | 

    T_float Identificador P_coma | 
    T_float Identificador Op_atribucion Numero Punto Numero P_coma |
    T_float Identificador Igual Numero Punto Numero P_coma |
    T_float Identificador Op_incremento P_coma | 
    T_float Op_incremento Identificador P_coma | 

    T_char Identificador Op_atribucion Comillas Comillas P_coma |
    T_char Identificador Igual Comillas Comillas P_coma |
    T_char Identificador Op_atribucion Comillas Identificador Comillas P_coma |
    T_char Identificador Igual Comillas Identificador Comillas P_coma
;

IF ::= If Parent_a SENTENCIA_BOOLEANA Parent_c Llave_a SENTENCIA Llave_c
;

SENTENCIA_BOOLEANA ::= 
    Identificador Op_igual Numero |
    Identificador Op_igual Identificador |
    Identificador Op_igual Comillas Comillas |
    Identificador Op_igual Comillas Identificador Comillas |

    Identificador Op_diferente Numero |
    Identificador Op_diferente Identificador |
    Identificador Op_diferente Comillas Comillas |
    Identificador Op_diferente Comillas Identificador Comillas |

    Identificador Op_or Numero |
    Identificador Op_or Identificador |
    Identificador Op_or Comillas Comillas |
    Identificador Op_or Comillas Identificador Comillas |

    Identificador Op_andB Numero |
    Identificador Op_andB Identificador |
    Identificador Op_andB Comillas Comillas |
    Identificador Op_andB Comillas Identificador Comillas |

    Identificador Op_mayor Numero |
    Identificador Op_mayor Identificador |
    Identificador Op_mayor Comillas Comillas |
    Identificador Op_mayor Comillas Identificador Comillas |

    Identificador Op_menor Numero |
    Identificador Op_menor Identificador |
    Identificador Op_menor Comillas Comillas |
    Identificador Op_menor Comillas Identificador Comillas |

    Identificador Op_and Numero |
    Identificador Op_and Identificador |
    Identificador Op_and Comillas Comillas |
    Identificador Op_and Comillas Identificador Comillas |

    Identificador Op_orB Numero |
    Identificador Op_orB Identificador |
    Identificador Op_orB Comillas Comillas |
    Identificador Op_orB Comillas Identificador Comillas |

    Identificador Op_mayorE Numero |
    Identificador Op_mayorE Identificador |
    Identificador Op_mayorE Comillas Comillas |
    Identificador Op_mayorE Comillas Identificador Comillas |

    Identificador Op_menorE Numero |
    Identificador Op_menorE Identificador |
    Identificador Op_menorE Comillas Comillas |
    Identificador Op_menorE Comillas Identificador Comillas |
;

IF_ELSE ::= If Parent_a SENTENCIA_BOOLEANA Parent_c Llave_a SENTENCIA Llave_c Else Llave_a SENTENCIA Llave_c
;

WHILE ::= While Parent_a SENTENCIA_BOOLEANA Parent_c Llave_a SENTENCIA Llave_c
;

DO_WHILE ::= Do Llave_a SENTENCIA Llave_c While Parent_a SENTENCIA_BOOLEANA Parent_c P_coma
;

FOR ::= For Parent_a SENTENCIA_FOR Parent_c Llave_a SENTENCIA Llave_c
;

SENTENCIA_FOR ::=
    T_int Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR
;

DECLARACION_FOR ::= 
    Identificador Op_atribucion Numero |
    Identificador Op_incremento | 
    Op_incremento Identificador
;

PRINTF ::=
    Printf Parent_a Comillas Comillas Parent_c P_coma |
    Printf Parent_a Comillas SENTENCIA_PRINTF Comillas Coma Identificador Parent_c P_coma
;

SENTENCIA_PRINTF ::=
    Identificador
;