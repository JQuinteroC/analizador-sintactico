package Analizador;

import java_cup.runtime.Symbol;

/*  José Luis Quintero Cañizalez - Edison Mauricio Riaño Alvarado */

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Linea, Comillas, If, Else, Do, While, For, Switch, Case, Break,
    Cadena, T_int, T_double, T_long, T_char, T_float, T_byte,
    Igual, Suma, Resta, Multiplicacion, Division, Modulo,
    Op_igual, Op_diferente,Op_menor, Op_mayor, Op_or, Op_and, Op_menorE, Op_mayorE, Op_orB, Op_andB,
    Op_boolFalse, Op_boolTrue,
    Op_incremento, Op_decremento,
    Op_asigResta, Op_asigDiv, Op_asigMult, Op_asigSuma, Op_asigModulo,
    Op_desDer, Op_desIzq, 

    Op_not, 
    
    Cout, Cin,
    Parent_a, Parent_c, Llave_a, Llave_c, Corchete_a, Corchete_c,
    Void, Printf, Scanf, Main, P_coma, Punto, Identificador, DPuntos,
    Namespace, Iostream, Std, Comillas_s, Using,
    Numeral, Numero, ERROR, Default, Define, Include;

non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, IF, IF_ELSE,
    WHILE, DO_WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR, T_DATO_ENTERO, T_DATO_FLOTANTE, OP_RELACIONAL, TRUE_FALSE;

start with INICIO;


INICIO ::= 
    T_int Main Parent_a Parent_c Llave_a SENTENCIA Llave_c |
    Main Parent_a Parent_c Llave_a SENTENCIA Llave_c |
    T_int Main Parent_a Parent_c Llave_a Llave_c |
    Main Parent_a Parent_c Llave_a Llave_c 
;
SENTENCIA ::= 
    SENTENCIA DECLARACION |
    DECLARACION |
    SENTENCIA IF | 
    IF |
    SENTENCIA IF_ELSE |
    IF_ELSE |
    SENTENCIA WHILE |
    WHILE |
    SENTENCIA DO_WHILE
    DO_WHILE |
    SENTENCIA FOR |
    FOR
;
DECLARACION ::= 
    T_DATO_ENTERO Identificador P_coma | 
    T_DATO_ENTERO Identificador Igual Numero P_coma |
    T_DATO_FLOTANTE Identificador Igual Numero Punto Numero P_coma |

    Cadena Identificador Igual Comillas Comillas P_coma |
    Cadena Identificador Igual Comillas Identificador Comillas P_coma |

    T_char Identificador Igual Comillas Comillas P_coma |
    T_char Identificador Igual Comillas Identificador Comillas P_coma
;

T_DATO_ENTERO ::= 
    T_int |
    T_long |
    T_byte
;

T_DATO_FLOTANTE ::=
    T_float |
    T_double
;

IF ::= If Parent_a SENTENCIA_BOOLEANA Parent_c Llave_a SENTENCIA Llave_c
;

SENTENCIA_BOOLEANA ::= 
    TRUE_FALSE | 
    Identificador OP_RELACIONAL TRUE_FALSE |
    Identificador OP_RELACIONAL Numero |
    Identificador OP_RELACIONAL Identificador |
    Identificador OP_RELACIONAL Comillas Comillas |
    Identificador OP_RELACIONAL Comillas Identificador Comillas
;
TRUE_FALSE ::=
    Op_boolTrue |
    Op_boolFalse
;
OP_RELACIONAL ::=
    Op_igual |
    Op_diferente |
    Op_and |
    Op_or |
    Op_menor |
    Op_mayor |
    Op_menorE |
    Op_mayorE |
    Op_orB |
    Op_andB
;

IF_ELSE ::= If Parent_a SENTENCIA_BOOLEANA Parent_c Llave_a SENTENCIA Llave_c Else Llave_a SENTENCIA Llave_c
;

WHILE ::= While Parent_a SENTENCIA_BOOLEANA Parent_c Llave_a SENTENCIA Llave_c
;

DO_WHILE ::= Do Llave_a SENTENCIA Llave_c While Parent_a SENTENCIA_BOOLEANA Parent_c P_coma
;

FOR ::= For Parent_a SENTENCIA_FOR Parent_c Llave_a SENTENCIA Llave_c
;

SENTENCIA_FOR ::=
    T_int Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR
;

DECLARACION_FOR ::= 
    Identificador Igual Numero |
    Identificador Op_incremento | 
    Identificador Op_decremento | 
    Op_incremento Identificador |
    Op_decremento Identificador
;

